{"ast":null,"code":"var _jsxFileName = \"/Users/jeremiahhuerta/Desktop/userDirectory/user-director/src/App.js\";\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      employees: [],\n      allEmployees: []\n    };\n\n    this.filterEmployees = event => {\n      const selectedRole = event.target.value;\n      console.log(selectedRole);\n\n      if (selectedRole === 'all') {\n        this.setState({\n          employees: this.state.allEmployees\n        });\n      } else {\n        // set this equal to a varable\n        var filterEmployees = this.state.allEmployees.filter(employee => {\n          if (employee.role === selectedRole) {\n            return true;\n          }\n\n          return false;\n        });\n        this.setState({\n          employees: filterEmployees\n        });\n        /* \n        create a new employee array that filters to only employees that have the selected role\n           use the filter function\n        */\n        // update it here\n        // set  the new employees as the updated state\n        // this.setState({ employees: /* new employees array goes here after filtered }) */\n      }\n    };\n\n    this.sortEmployees = event => {\n      const employees = this.state.employees;\n      const sortSelection = event.target.value;\n\n      if (sortSelection === 'alpOrder') {\n        // sorting the employees state\n        employees.sort((employee1, employee2) => {\n          if (employee1.name < employee2.name) {\n            return -1;\n          }\n\n          if (employee2.name > employee1.name) {\n            return 1;\n          }\n\n          return 0;\n        });\n        this.setState({\n          employees\n        });\n      } else {\n        employees.sort((employee1, employee2) => {\n          if (employee1.name < employee2.name) {\n            return 1;\n          }\n\n          if (employee2.name > employee1.name) {\n            return -1;\n          }\n\n          return 0;\n        });\n        this.setState({\n          employees\n        });\n      } // doing the opposite sort here\n\n    };\n  }\n\n  componentDidMount() {\n    fetch('/employees.json').then(response => response.json()).then(employees => {\n      this.setState({\n        employees: employees,\n        isLoading: false,\n        allEmployees: employees\n      });\n    });\n  }\n\n}\n\nrender = () => {\n  const {\n    isLoading,\n    employees\n  } = this.state;\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"filter by role\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: this.filterEmployees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"manager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"engineer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Engineer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"intern\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Intern\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"sort by...\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: this.sortEmployees,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"alpOrder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \" A-Z\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"reverse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Z-A\"))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Role\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Phone #\")), employees.map(employee => /*#__PURE__*/React.createElement(\"tr\", {\n    key: employee.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, employee.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, employee.role), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, employee.phone)))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jeremiahhuerta/Desktop/userDirectory/user-director/src/App.js"],"names":["React","App","Component","state","isLoading","employees","allEmployees","filterEmployees","event","selectedRole","target","value","console","log","setState","filter","employee","role","sortEmployees","sortSelection","sort","employee1","employee2","name","componentDidMount","fetch","then","response","json","render","map","id","phone"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    employees: [],\n    allEmployees: []\n  }\n\n  componentDidMount() {\n    fetch('/employees.json')\n      .then(response => response.json())\n      .then(employees => {\n        this.setState({\n          employees: employees,\n          isLoading: false,\n          allEmployees: employees\n        })\n      });\n  }\n\n  filterEmployees = event => {\n    const selectedRole = event.target.value;\n    console.log(selectedRole)\n\n    if (selectedRole === 'all') {\n      this.setState({ employees: this.state.allEmployees });\n    } else {\n\n      // set this equal to a varable\n      var filterEmployees = this.state.allEmployees.filter(employee => {\n        if (employee.role === selectedRole) {\n          return true\n        }\n        return false;\n      });\n      this.setState({ employees: filterEmployees });\n\n      /* \n      create a new employee array that filters to only employees that have the selected role\n  \n      use the filter function\n      */\n\n      // update it here\n      // set  the new employees as the updated state\n      // this.setState({ employees: /* new employees array goes here after filtered }) */\n    }\n  }\n\n  sortEmployees = (event) => {\n    const employees = this.state.employees;\n    const sortSelection = event.target.value;\n    if (sortSelection === 'alpOrder') {\n      // sorting the employees state\n\n\n      employees.sort((employee1, employee2) => {\n        if (employee1.name < employee2.name) {\n          return -1;\n        }\n\n        if (employee2.name > employee1.name) {\n          return 1\n        }\n\n        return 0;\n      })\n\n      this.setState({ employees });\n    } else {\n\n      employees.sort((employee1, employee2) => {\n        if (employee1.name < employee2.name) {\n          return 1;\n        }\n\n        if (employee2.name > employee1.name) {\n          return -1\n        }\n\n        return 0;\n      })\n\n      this.setState({ employees });\n\n    }\n\n\n\n\n    // doing the opposite sort here\n\n\n  }\n\n\n}\n\nrender = ()=> {\n  const { isLoading, employees } = this.state;\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <>\n      <div>\n        <label>filter by role</label>\n        <select onChange={this.filterEmployees}>\n          <option value=\"all\">All</option>\n          <option value=\"manager\">Manager</option>\n          <option value=\"engineer\">Engineer</option>\n          <option value=\"intern\">Intern</option>\n          {/* List all roles as options here */}\n        </select>\n      </div>\n      <div>\n        <label>sort by...</label>\n        <select onChange={this.sortEmployees}>\n          <option value=\"alpOrder\"> A-Z</option>\n          <option value=\"reverse\">Z-A</option>\n\n          {/* List all roles as options here */}\n        </select>\n      </div>\n      <table className=\"table\">\n        <tr>\n          <th>Name</th>\n          <th>Role</th>\n          <th>Phone #</th>\n        </tr>\n        {employees.map(employee => (\n          <tr key={employee.id}>\n            <td>{employee.name}</td>\n            <td>{employee.role}</td>\n            <td>{employee.phone}</td>\n          </tr>\n        ))}\n      </table>\n    </>\n  )\n};\n  \n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}